apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: mongodb-stateful-build
objects:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: "mongodb"
    labels:
      app: mongodb
  spec:
    serviceName: "mongodb-internal"
    selector:
      matchLabels:
        name: mongodb
    replicas: 3
    template:
      metadata:
        labels:
          name: mongodb
      spec:
        containers:
          - name: mongodb-container
            image: "registry.access.redhat.com/rhscl/mongodb-34-rhel7:latest"
            ports:
              - containerPort: 27017
                name: mongodb-port
            args:
              - "run-mongod-replication"
            volumeMounts:
              - name: mongodb-data
                mountPath: "/var/lib/mongodb/data"
            env:
              - name: MONGODB_DATABASE
                value: "parks"
              - name: MONGODB_USER
                value: "mongodb"
              - name: MONGODB_PASSWORD
                value: "mongodb"
              - name: MONGODB_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mongodb-secrets
                    key: mongodb-admin-password 
              - name: MONGODB_REPLICA_NAME
                value: "rs0"
              - name: MONGODB_KEYFILE_VALUE
                valueFrom:
                  secretKeyRef:
                    name: mongodb-secrets
                    key: mongodb-key-file
              - name: MONGODB_SERVICE_NAME
                value: "mongodb-internal"
            readinessProbe:
              exec:
                command:
                  - stat
                  - /tmp/initialized
    volumeClaimTemplates:
      - metadata:
          name: mongodb-data
          labels:
            name: "mongodb"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: "4Gi"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: mongodb
    name: mongodb
  spec:
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: null
    labels:
      name: mongodb
    name: mongodb-internal
  spec:
    clusterIP: None
    ports:
    - name: mongodb
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
